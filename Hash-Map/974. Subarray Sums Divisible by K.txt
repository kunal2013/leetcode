class Solution {
public:
    int subarraysDivByK(vector<int>& nums, int k)
    {
       unordered_map <int,int> hash ;
       int sum = 0 ;
       int count = 0 ;
       hash[0] = 1 ;         // initial if modulus can be 0
       for (int i=0 ; i<nums.size() ; i++)
       {
         sum = (sum + nums[i]) ;
         if (sum%k <0)                 
                 sum = (sum%k) + k ;
         if (hash.find(sum%k) != hash.end())
                 count = count + hash[sum%k] ;
         hash[sum%k]++ ;
        }
            return count ;
    }
};